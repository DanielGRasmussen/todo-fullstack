#root {
	background-color: #152238;
	background-attachment: fixed;
	background-size: cover;
	margin: 0;
	padding: 0;
	height: 100vh; /* To make the page take up the entire height */
	display: flex;
	flex-direction: column;
}

header,
footer {
	height: 50px;
}

/* Background by screen size */
@media only screen and (max-width: 640px) {
	#root {
		background-image: url("/public/assets/background640.svg"); /* original background (public/original.svg) by SVGBackgrounds.com */
	}
}
@media only screen and (min-width: 641px) and (max-width: 1024px) {
	#root {
		background-image: url("/public/assets/background1024.svg"); /* original background (public/original.svg) by SVGBackgrounds.com */
	}
}
@media only screen and (min-width: 1025px) and (max-width: 1440px) {
	#root {
		background-image: url("/public/assets/background1440.svg"); /* original background (public/original.svg) by SVGBackgrounds.com */
	}
}
@media only screen and (min-width: 1441px) {
	#root {
		background-image: url("/public/assets/background2000.svg"); /* original background (public/original.svg) by SVGBackgrounds.com */
	}
}

main {
	width: 80%;
	min-width: 800px;
	max-width: 1100px;
	background: white;
	margin: 0 auto;
	border-radius: 20px;
	padding-bottom: 5px;
	flex-grow: 1; /* Take up the remaining space */
}

@media only screen and (max-width: 800px) {
	main {
		width: 100%;
		min-width: 100%;
	}
}

h1 {
	text-align: center;
	margin-bottom: 0;
}

/* Menu */
#menu {
	display: flex;
	justify-content: center;
}

#search-bar {
	width: 250px;
	height: 46px;
	font-size: 12pt;
	border: 1px solid #9e9e9e;
	border-radius: 4px;
	padding-left: 5px;
}

@media screen and (max-width: 500px) {
	#menu {
		flex-wrap: wrap;
		align-items: center;
	}

	/* The class name of the react-select control changes when the dropdown menu is up */
	.css-b62m3t-container {
		width: 245px;
		margin-left: 10px;
		padding: 0;
		margin-top: 5px;
	}

	.css-b62m3t-container > div {
		width: 225px;
	}
}

#sort-direction {
	width: 30px;
	height: 30px;
	border: 1px solid #ccc;
	background-color: #f2f2f2;
	border-radius: 4px;
	position: relative;
	cursor: pointer;
	margin-top: 5px;
	padding: 5px;
}

@media screen and (min-width: 500px) {
	#sort-direction {
		margin-left: 10px;
	}
}

#sort-direction img {
	position: absolute;
	width: 26px;
	height: 26px;
	top: 2px;
	left: 2px;
	padding: 5px;
}

#sort-direction:hover {
	outline-color: #999;
	background-color: #e8e8e8;
}

/* Slowly rotate upside down */
@keyframes upside-down {
	from {
		transform: rotate(0);
	}
	to {
		transform: rotate(180deg);
	}
}

/* Slowly rotate downside-up */
@keyframes downside-up {
	from {
		transform: rotate(180deg);
	}
	to {
		transform: rotate(360deg);
	}
}

/* React-select animations */
@keyframes fadeIn {
	from {
		opacity: 0;
		transform: translateY(2rem);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes fadeOut {
	from {
		opacity: 1;
		transform: translateY(0);
	}
	to {
		opacity: 0;
		transform: translateY(2rem);
	}
}

.select-menu {
	animation: fadeIn 0.2s ease-in-out;
}

.select-menu-close {
	animation: fadeOut 0.3s ease-in-out;
}

#view-as {
	margin-left: 5px;
	display: flex;
	align-items: center;
}

#view-as img {
	width: 20px;
	height: 20px;
	border: 1px solid #ccc;
	background-color: #f2f2f2;
	border-radius: 4px;
	position: relative;
	cursor: pointer;
	margin-top: 5px;
	margin-left: 5px;
	padding: 5px;
}

#view-as img:hover {
	outline-color: #999;
	background-color: #e8e8e8;
}

#view-as img.active {
	outline-color: #999;
	background-color: #d1d1d1;
	cursor: auto;
}

/* To-do Items Displays */
#todos {
	padding: 0 15px;
	list-style: none;
}

.list .todo-item {
	margin-bottom: 10px;
}

/* Grid list view */
.grid {
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(290px, 1fr));
	grid-gap: 20px;
}

.todo-item {
	border-radius: 10px;
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
	padding: 20px;
}

.todo-item h3 {
	margin: 0;
	font-size: 1.4rem;
}

.todo-item .priority,
.todo-item .completion-date {
	font-size: 12px;
	margin: 0;
}

.todo-item .description {
	margin: 0;
}

/* Style the completion date */
.todo-item .completion-date {
	color: #666;
}

/* Style the priority */
.todo-item .priority {
	color: #e60000;
}
